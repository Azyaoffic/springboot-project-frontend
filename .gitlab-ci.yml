stages:
  - build
  - dockerize
  - deploy

build:
  stage: build
  image: node:16
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/

dockerize:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  dependencies:
    - build

deploy:
  stage: deploy
  image: alpine:latest
  script:
    - echo "Deploying $IMAGE_TAG to production..."
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "Deploying $IMAGE_TAG to production..."
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/ubuntu/vite-project && docker compose down && docker compose pull && docker compose up -d --remove-orphans"
  only:
    - main
